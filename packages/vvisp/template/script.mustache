const path = require('path');
const { getWeb3, getPrivateKey, sendTx } = require('@haechi-labs/vvisp-utils');
const web3 = getWeb3();
const fs = require('fs');

const privateKey = getPrivateKey(process.env.MNEMONIC, process.env.PRIV_INDEX);

const abi = fs.readFileSync(path.join(__dirname, '../abi/', '{{name}}.json'), {'encoding': 'utf8'});

module.exports = function(_contractAddr = '') {
  const contract = new web3.eth.Contract(JSON.parse(abi));
  contract.options.address = _contractAddr;
  return {
    at: function(_addr) {
      contract.options.address = _addr;
    },
    getAddress: function() {
      return contract.options.address;
    },
    methods: {
      {{#constantFuncs}}
      {{name}}: function({{#inputs}}_{{name}}, {{/inputs}}) {
        return contract.methods.{{name}}({{#inputs}}_{{name}}, {{/inputs}}).call();
      },
      {{/constantFuncs}}
      {{#nonConstantFuncs}}
      {{name}}: function({{#inputs}}_{{name}}, {{/inputs}}options) {
        const txData = contract.methods.{{name}}({{#inputs}}_{{name}}, {{/inputs}}).encodeABI();
        options = {
          ...options,
          data: txData
        };
        return sendTx(contract.options.address, options ? options.value : 0, privateKey, options);
      },
      {{/nonConstantFuncs}}
    }
  }
};
